using System;
using Microsoft.EntityFrameworkCore.Migrations;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace teamseven.EzExam.Repository.Migrations
{
    /// <inheritdoc />
    public partial class AddTestSystemEntities : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.AlterColumn<int>(
                name: "TotalMarks",
                schema: "public",
                table: "exams",
                type: "integer",
                nullable: true,
                defaultValue: 100,
                oldClrType: typeof(int),
                oldType: "integer",
                oldDefaultValue: 100);

            migrationBuilder.AlterColumn<int>(
                name: "TimeLimit",
                schema: "public",
                table: "exams",
                type: "integer",
                nullable: true,
                defaultValue: 60,
                oldClrType: typeof(int),
                oldType: "integer",
                oldDefaultValue: 60);

            migrationBuilder.AddColumn<int>(
                name: "AITestRecommendationId",
                schema: "public",
                table: "exams",
                type: "integer",
                nullable: true);

            migrationBuilder.AddColumn<string>(
                name: "DifficultyDistribution",
                schema: "public",
                table: "exams",
                type: "character varying(500)",
                maxLength: 500,
                nullable: true);

            migrationBuilder.AddColumn<int>(
                name: "Duration",
                schema: "public",
                table: "exams",
                type: "integer",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<string>(
                name: "GenerationSource",
                schema: "public",
                table: "exams",
                type: "character varying(50)",
                maxLength: 50,
                nullable: true);

            migrationBuilder.AddColumn<bool>(
                name: "IsAutoGenerated",
                schema: "public",
                table: "exams",
                type: "boolean",
                nullable: false,
                defaultValue: false);

            migrationBuilder.AddColumn<string>(
                name: "TestConfiguration",
                schema: "public",
                table: "exams",
                type: "character varying(2000)",
                maxLength: 2000,
                nullable: true);

            migrationBuilder.AddColumn<string>(
                name: "TopicDistribution",
                schema: "public",
                table: "exams",
                type: "character varying(1000)",
                maxLength: 1000,
                nullable: true);

            migrationBuilder.AddColumn<int>(
                name: "DefaultDuration",
                schema: "public",
                table: "exam_types",
                type: "integer",
                nullable: true);

            migrationBuilder.AddColumn<string>(
                name: "Description",
                schema: "public",
                table: "exam_types",
                type: "character varying(500)",
                maxLength: 500,
                nullable: true);

            migrationBuilder.AddColumn<bool>(
                name: "IsActive",
                schema: "public",
                table: "exam_types",
                type: "boolean",
                nullable: false,
                defaultValue: false);

            migrationBuilder.AddColumn<int>(
                name: "MaxQuestions",
                schema: "public",
                table: "exam_types",
                type: "integer",
                nullable: true);

            migrationBuilder.AddColumn<int>(
                name: "MinQuestions",
                schema: "public",
                table: "exam_types",
                type: "integer",
                nullable: true);

            migrationBuilder.AddColumn<string>(
                name: "TypeCode",
                schema: "public",
                table: "exam_types",
                type: "character varying(20)",
                maxLength: 20,
                nullable: false,
                defaultValue: "");

            migrationBuilder.CreateTable(
                name: "ai_test_recommendations",
                columns: table => new
                {
                    Id = table.Column<int>(type: "integer", nullable: false)
                        .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn),
                    UserId = table.Column<int>(type: "integer", nullable: false),
                    TestName = table.Column<string>(type: "character varying(200)", maxLength: 200, nullable: false),
                    Description = table.Column<string>(type: "character varying(1000)", maxLength: 1000, nullable: true),
                    SubjectId = table.Column<int>(type: "integer", nullable: false),
                    ChapterId = table.Column<int>(type: "integer", nullable: true),
                    LessonId = table.Column<int>(type: "integer", nullable: true),
                    RecommendedDuration = table.Column<int>(type: "integer", nullable: true),
                    RecommendedQuestionCount = table.Column<int>(type: "integer", nullable: true),
                    DifficultyDistribution = table.Column<string>(type: "character varying(500)", maxLength: 500, nullable: true),
                    TopicDistribution = table.Column<string>(type: "character varying(1000)", maxLength: 1000, nullable: true),
                    BasedOnHistory = table.Column<bool>(type: "boolean", nullable: false),
                    BasedOnWeakAreas = table.Column<bool>(type: "boolean", nullable: false),
                    BasedOnProgress = table.Column<bool>(type: "boolean", nullable: false),
                    ConfidenceScore = table.Column<decimal>(type: "numeric", nullable: false),
                    IsAccepted = table.Column<bool>(type: "boolean", nullable: true),
                    IsGenerated = table.Column<bool>(type: "boolean", nullable: false),
                    GeneratedExamId = table.Column<int>(type: "integer", nullable: true),
                    CreatedAt = table.Column<DateTime>(type: "timestamp with time zone", nullable: false),
                    UpdatedAt = table.Column<DateTime>(type: "timestamp with time zone", nullable: false),
                    ExpiresAt = table.Column<DateTime>(type: "timestamp with time zone", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ai_test_recommendations", x => x.Id);
                    table.ForeignKey(
                        name: "FK_ai_test_recommendations_chapters_ChapterId",
                        column: x => x.ChapterId,
                        principalSchema: "public",
                        principalTable: "chapters",
                        principalColumn: "Id");
                    table.ForeignKey(
                        name: "FK_ai_test_recommendations_exams_GeneratedExamId",
                        column: x => x.GeneratedExamId,
                        principalSchema: "public",
                        principalTable: "exams",
                        principalColumn: "Id");
                    table.ForeignKey(
                        name: "FK_ai_test_recommendations_lessons_LessonId",
                        column: x => x.LessonId,
                        principalSchema: "public",
                        principalTable: "lessons",
                        principalColumn: "Id");
                    table.ForeignKey(
                        name: "FK_ai_test_recommendations_subjects_SubjectId",
                        column: x => x.SubjectId,
                        principalSchema: "public",
                        principalTable: "subjects",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "FK_ai_test_recommendations_users_UserId",
                        column: x => x.UserId,
                        principalSchema: "public",
                        principalTable: "users",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateIndex(
                name: "IX_exams_AITestRecommendationId",
                schema: "public",
                table: "exams",
                column: "AITestRecommendationId");

            migrationBuilder.CreateIndex(
                name: "IX_ai_test_recommendations_ChapterId",
                table: "ai_test_recommendations",
                column: "ChapterId");

            migrationBuilder.CreateIndex(
                name: "IX_ai_test_recommendations_GeneratedExamId",
                table: "ai_test_recommendations",
                column: "GeneratedExamId");

            migrationBuilder.CreateIndex(
                name: "IX_ai_test_recommendations_LessonId",
                table: "ai_test_recommendations",
                column: "LessonId");

            migrationBuilder.CreateIndex(
                name: "IX_ai_test_recommendations_SubjectId",
                table: "ai_test_recommendations",
                column: "SubjectId");

            migrationBuilder.CreateIndex(
                name: "IX_ai_test_recommendations_UserId",
                table: "ai_test_recommendations",
                column: "UserId");

            migrationBuilder.AddForeignKey(
                name: "FK_exams_ai_test_recommendations_AITestRecommendationId",
                schema: "public",
                table: "exams",
                column: "AITestRecommendationId",
                principalTable: "ai_test_recommendations",
                principalColumn: "Id");
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropForeignKey(
                name: "FK_exams_ai_test_recommendations_AITestRecommendationId",
                schema: "public",
                table: "exams");

            migrationBuilder.DropTable(
                name: "ai_test_recommendations");

            migrationBuilder.DropIndex(
                name: "IX_exams_AITestRecommendationId",
                schema: "public",
                table: "exams");

            migrationBuilder.DropColumn(
                name: "AITestRecommendationId",
                schema: "public",
                table: "exams");

            migrationBuilder.DropColumn(
                name: "DifficultyDistribution",
                schema: "public",
                table: "exams");

            migrationBuilder.DropColumn(
                name: "Duration",
                schema: "public",
                table: "exams");

            migrationBuilder.DropColumn(
                name: "GenerationSource",
                schema: "public",
                table: "exams");

            migrationBuilder.DropColumn(
                name: "IsAutoGenerated",
                schema: "public",
                table: "exams");

            migrationBuilder.DropColumn(
                name: "TestConfiguration",
                schema: "public",
                table: "exams");

            migrationBuilder.DropColumn(
                name: "TopicDistribution",
                schema: "public",
                table: "exams");

            migrationBuilder.DropColumn(
                name: "DefaultDuration",
                schema: "public",
                table: "exam_types");

            migrationBuilder.DropColumn(
                name: "Description",
                schema: "public",
                table: "exam_types");

            migrationBuilder.DropColumn(
                name: "IsActive",
                schema: "public",
                table: "exam_types");

            migrationBuilder.DropColumn(
                name: "MaxQuestions",
                schema: "public",
                table: "exam_types");

            migrationBuilder.DropColumn(
                name: "MinQuestions",
                schema: "public",
                table: "exam_types");

            migrationBuilder.DropColumn(
                name: "TypeCode",
                schema: "public",
                table: "exam_types");

            migrationBuilder.AlterColumn<int>(
                name: "TotalMarks",
                schema: "public",
                table: "exams",
                type: "integer",
                nullable: false,
                defaultValue: 100,
                oldClrType: typeof(int),
                oldType: "integer",
                oldNullable: true,
                oldDefaultValue: 100);

            migrationBuilder.AlterColumn<int>(
                name: "TimeLimit",
                schema: "public",
                table: "exams",
                type: "integer",
                nullable: false,
                defaultValue: 60,
                oldClrType: typeof(int),
                oldType: "integer",
                oldNullable: true,
                oldDefaultValue: 60);
        }
    }
}
